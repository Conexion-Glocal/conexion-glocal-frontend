---
import { Icon } from "astro-icon/components";

import { handleFind } from "@resources/index";

const { endpoint, permissions } = Astro.props;
const response = await handleFind(endpoint);
const data = response?.status === 200 ? response?.data : null;
---

<ul
    class="divide-y divide-gray-100 bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl"
>
    {
        data
            ? data.map(
                  ({ description, id, image, name, status, template_type, template_type_name }) => (
                      <li class="relative flex justify-between gap-x-6 px-4 py-5 hover:bg-gray-50 sm:px-6">
                          <div class="flex min-w-0 gap-x-4">
                              <img
                                  alt={name}
                                  class="h-12 w-12 flex-none rounded-full bg-gray-50"
                                  src={`/images/badge/template/${image}.png`}
                              />
                              <div class="min-w-0 flex-auto">
                                  <p class="text-sm font-semibold leading-6 text-gray-900">
                                      <a
                                          href="#"
                                          @click.prevent={`isInfoDrawerOpen = true; description = '${description}'; id = '${id}'; image = '/images/badge/template/${image}.png'; name = '${name}'; status = '${status}'; template_type = '${template_type}'; template_type_name = '${template_type_name}';`}
                                      >
                                          <span class="absolute inset-x-0 -top-px bottom-0" />
                                          {name}
                                      </a>
                                  </p>
                                  <p class="mt-1 flex text-xs leading-5 text-gray-500 truncate">
                                      {description}
                                  </p>
                              </div>
                          </div>
                          <div
                              class="flex flex-none items-center gap-x-4"
                              x-data="{isListOptionsMenuOpen: false}"
                          >
                              <div class="relative flex-none">
                                  {permissions?.delete ||
                                  permissions?.update ? (
                                      <button
                                          class="-m-2.5 block p-2.5 text-gray-500 hover:text-gray-900"
                                          type="button"
                                          @click="isListOptionsMenuOpen = ! isListOptionsMenuOpen"
                                      >
                                          <Icon
                                              class="h-5 w-5"
                                              name="shared/ellipsis-vertical"
                                          />
                                      </button>
                                  ) : (
                                      ""
                                  )}
                                  <div
                                      class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
                                      tabindex="-1"
                                      x-show="isListOptionsMenuOpen"
                                      @click.outside="isListOptionsMenuOpen = false"
                                  >
                                      {permissions?.update ? (
                                          <a
                                              href="#"
                                              class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                              tabindex="-1"
                                              @click.prevent={`isUpdateWindowOpen = true; description = '${description}'; id = '${id}'; image = '/images/badge/template/${image}.png'; name = '${name}'; status = '${status}'; template_type = '${template_type}'; template_type_name = '${template_type_name}';`}
                                          >
                                              Editar
                                          </a>
                                      ) : (
                                          ""
                                      )}
                                      {permissions?.delete ? (
                                          <a
                                              href="#"
                                              class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                              tabindex="-1"
                                              @click.prevent={`isDeleteWindowOpen = true; id = '${id}'`}
                                          >
                                              Eliminar
                                          </a>
                                      ) : (
                                          ""
                                      )}
                                  </div>
                              </div>
                          </div>
                      </li>
                  ),
              )
            : ""
    }
</ul>
