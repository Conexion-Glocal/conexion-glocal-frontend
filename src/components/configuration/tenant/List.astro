---
import axios from "axios";
import Icon from "node_modules/astro-icon/components/Icon.astro";
const { endpoint } = Astro.props;
let data = [];
await axios
    .get(`${endpoint}`)
    .then((response) => (data = response.data))
    .catch((error) => console.log(error));
---

<ul class="divide-y divide-gray-100 bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl">
    {
        data.length
            ? data.map(({ description, id, name }) => (
                  <li class="relative flex justify-between gap-x-6 px-4 py-5 hover:bg-gray-50 sm:px-6">
                      <div class="flex min-w-0 gap-x-4">
                          <div class="min-w-0 flex-auto">
                              <p class="text-sm font-semibold leading-6 text-gray-900">
                                  <a
                                      href="#"
                                      @click.prevent={`description = '${description || ""}'; id = '${id}'; name = '${name}'; isInfoDrawerOpen = true;`}
                                  >
                                      <span class="absolute inset-x-0 -top-px bottom-0" />
                                      {name}
                                  </a>
                              </p>
                              <p class="mt-1 flex text-xs leading-5 text-gray-500">
                                  {description}
                              </p>
                          </div>
                      </div>
                      <div
                          class="flex flex-none items-center gap-x-4"
                          x-data="{isListOptionsMenuOpen: false}"
                      >
                          <div class="relative flex-none">
                              <button
                                  class="-m-2.5 block p-2.5 text-gray-500 hover:text-gray-900"
                                  type="button"
                                  @click="isListOptionsMenuOpen = ! isListOptionsMenuOpen"
                              >
                                  <Icon
                                      class="h-5 w-5"
                                      name="shared/ellipsis-vertical"
                                  />
                              </button>
                              <div
                                  class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
                                  tabindex="-1"
                                  x-show="isListOptionsMenuOpen"
                                  @click.outside="isListOptionsMenuOpen = false"
                              >
                                  <a
                                      href="#"
                                      class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                      tabindex="-1"
                                      @click.prevent={`description = '${description || ""}'; isUpdateWindowOpen = ! isUpdateWindowOpen; id = '${id}'; name = '${name}'`}
                                  >
                                      Editar
                                  </a>
                                  <a
                                      href="#"
                                      class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                      tabindex="-1"
                                      @click.prevent={`isDeleteWindowOpen = ! isDeleteWindowOpen; id = '${id}'`}
                                  >
                                      Eliminar
                                  </a>
                              </div>
                          </div>
                      </div>
                  </li>
              ))
            : ""
    }
    </div>
</ul>