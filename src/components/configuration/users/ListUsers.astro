---
import { Icon } from "astro-icon/components";
const usuarios = [
   {
       id: 1,
       name: "Carlos Lopez",
       email: "carlo@gemail.com",
       role: "estudiante",
       role_status: true,
   },
   {
       id: 2,
       name: "Laura Pe√±a",
       email: "penna@gemail.com",
       role: "administrador",
       role_status: true,
   },
   {
       id: 3,
       name: "Juan Martinez",
       email: "juan@gemail.com",
       role: "estudiante",
       role_status: false,
   },
];


// import axios from "axios";
// let usuarios = [];
// await axios
//     .get(`${import.meta.env.API_URL}user`)
//     .then(function (response) {
//         usuarios = response.data;
//     })
//     .catch(function (error) {
//         console.log(error);
//     });


const roles = ["estudiante", "administrador", "Docente"];


---


<div class="container p-2 mx-auto" x-data="{ selectedRole: '' }">
   <div class="title text-3xl mb-5">
       <h3>Roles de usuarios</h3>
   </div>


   <div class="mb-5 w-full md:w-1/2">
       <label for="role" class="text-gray-700 font-semibold">Filtrar por rol:</label>
       <select
           id="role"
           class="ml-3 px-4 py-2 border border-gray-300 rounded-md focus:ring focus:ring-emerald-300 w-full"
           x-model="selectedRole"
       >
           <option value="">Todos</option>
           <template x-for=`role in ${JSON.stringify(roles)}` :key="role">
               <option x-text="role" :value="role"></option>
           </template>
       </select>
   </div>


   <ul class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl">
       <template x-for=`usuario in ${JSON.stringify(usuarios)}` :key="usuario.id">
           <template x-if="selectedRole === '' || selectedRole === usuario.role">
               <li class="flex justify-between items-center gap-x-2 px-2 py-1 hover:bg-gray-50 sm:px-6">
                   <div class="grid grid-cols-1 sm:grid-cols-4 flex-auto text-sm">
                       <p class="font-semibold text-gray-900" x-text="usuario.name"></p>
                       <p class="text-gray-600" x-text="usuario.email"></p>
                       <p class="text-gray-600" x-text="usuario.role"></p>
                       <div x-data="{ estate: usuario.role_status }">
                           <template x-if="estate === true">
                               <span class="inline-flex items-center bg-green-100 text-green-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                                   <span class="w-2 h-2 me-1 bg-green-500 rounded-full"></span>
                                   Habilitado
                               </span>
                           </template>
                           <template x-if="estate === false">
                               <span class="inline-flex items-center bg-red-100 text-red-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                                   <span class="w-2 h-2 me-1 bg-red-500 rounded-full"></span>
                                   Deshabilitado
                               </span>
                           </template>
                       </div>
                   </div>
                   <div class="flex justify-end items-center" x-data="{ isListOptionsMenuOpen: false }">
                       <div class="relative flex-none">
                           <button
                               class="-m-5.5 block p-2.5 text-gray-500 hover:text-gray-900"
                               type="button"
                               @click="isListOptionsMenuOpen = !isListOptionsMenuOpen"
                           >
                               <Icon class="h-5 w-5" name="shared/ellipsis-vertical"></Icon>
                           </button>
                           <div
                               class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
                               tabindex="-1"
                               x-show="isListOptionsMenuOpen"
                               @click.outside="isListOptionsMenuOpen = false"
                           >
                               <a
                                   href="#"
                                   class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                   tabindex="-1"
                                   @click.prevent="isUpdateWindowOpen = true; selectedProcess = usuario.id;"
                               >
                                   Editar
                               </a>
                               <a
                                   href="#"
                                   class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                   tabindex="-1"
                                   @click.prevent="isDeleteWindowOpen = true; selectedProcess = usuario.id; console.log('Proceso ID para eliminar:', usuario.id)"
                               >
                                   Eliminar
                               </a>
                           </div>
                       </div>
                   </div>
               </li>
           </template>
       </template>


       <li class="text-gray-600 p-4" x-show=`${JSON.stringify(usuarios)}.length === 0`>No hay procesos disponibles.</li>
   </ul>
</div>
