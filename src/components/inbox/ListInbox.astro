---
import { Icon } from "astro-icon/components";

// import axios from "axios";
// let tareas = [];
// await axios
//     .get(`${import.meta.env.API_URL}processes/task-list`)
//     .then(function (response) {
//         tareas = response.data;
//     })
//     .catch(function (error) {
//         console.log(error);
//     });


const getStudentConvocation = [
  {
    id: "E-24",
    name: "Convocatoria 2024-01",
    creationDate: "2024-01-15",
    user_name: "Carlos Lopez",
    formation: "Pregrado",
    career: "Ingeniería de Sistemas",
    role: "Estudiante",
  },
  {
    id: "D-22",
    name: "Convocatoria 2024-02",
    creationDate: "2024-03-10",
    user_name: "Laura Peña",
    formation: "Postgrado",
    career: "Administración de Empresas",
    role: "Estudiante",
  },
  {
    id: "A-11",
    name: "Convocatoria 2024-03",
    creationDate: "2024-06-25",
    user_name: "Juan Martinez",
    formation: "Pregrado",
    career: "Derecho",
    role: "Docente",
  },
];


---
<div class="bg-white shadow-md rounded-md overflow-hidden mx-auto  max-w-full md:max-w-3xl" x-data="{ selectedrole: '' }">
  <!-- <div class="bg-gray-100 py-2 px-4">
    <h2 class="text-xl font-semibold text-gray-800">Convocatorias</h2>
  </div> -->

  <div x-model="selectedrole" class="flex flex-col md:flex-row justify-center space-y-2 md:space-y-0 md:space-x-4 mb-10 ">
    <button
      class="px-4 py-2 md:px-6 border border-green-600 rounded-3xl transition"
      :class="{ 'bg-green-600 text-white': selectedrole === 'Estudiante' }"
      @click="selectedrole === 'Estudiante' ? selectedrole = '' : selectedrole = 'Estudiante'"
    >
      Estudiantes
    </button>

    <button
      class="px-4 py-2 md:px-6 border border-green-600 rounded-3xl transition"
      :class="{ 'bg-green-600 text-white': selectedrole === 'administrador' }"
      @click="selectedrole === 'administrador' ? selectedrole = '' : selectedrole = 'administrador'"
    >
      Administradores
    </button>

    <button
      class="px-4 py-2 md:px-6 border border-green-600 rounded-3xl transition"
      :class="{ 'bg-green-600 text-white': selectedrole === 'Docente' }"
      @click="selectedrole === 'Docente' ? selectedrole = '' : selectedrole = 'Docente'"
    >
      Docentes
    </button>
</div>


  <div x-effect="console.log(selectedrole)">
    <ul class="divide-y divide-gray-200">
      <template
        x-for=`(convocatoria, index) in ${JSON.stringify(getStudentConvocation)}`
        :key="convocatoria.id"
      >

      <template x-if="selectedrole === '' || selectedrole === convocatoria.role">
        <li class="flex justify-between items-center py-2 px-3">
          <img
            class="w-12 h-12 rounded-full object-cover mr-4"
            :src="`https://randomuser.me/api/portraits/men/${3 + index}.jpg`"
            alt="User avatar"
          />

          <div class="w-full md:w-1/3 mb-4 md:mb-0">
            <h3 class="text-gray-600 text-base" x-text="convocatoria.name"></h3>
            <p class="text-gray-800 text-lg" x-text="convocatoria.user_name"></p>
            <p class="text-gray-600 text-base" x-text="convocatoria.formation"></p>
            <p class="text-gray-600 text-base" x-text="convocatoria.career"></p>
          </div>

          <div class="grid grid-cols-2 md:grid-cols-4 w-full md:w-2/3 gap-2">
            <div class="flex flex-col items-center">
              <p class="text-sm">Documentos</p>
              <Icon class="h-6 w-6 md:h-10 md:w-10" name="shared/check_circle" />
            </div>
            <div class="flex flex-col items-center">
              <p class="text-sm">Admision</p>
              <Icon class="h-6 w-6 md:h-10 md:w-10" name="shared/error" />
            </div>
            <div class="flex flex-col items-center">
              <p class="text-sm">Viaje</p>
              <Icon class="h-6 w-6 md:h-10 md:w-10" name="shared/exclamation_sign" />
            </div>
            <div class="flex flex-col items-center">
              <p class="text-sm">Notas</p>
              <Icon class="h-6 w-6 md:h-10 md:w-10" name="shared/check_circle" />
            </div>
          </div>
        </li>
      </template>
        
      </template>
    </ul>
  </div>
</div>





<!-- 

<div class="container p-5">
    <div class="title text-3xl mb-5">
        <h3>Procesos</h3>
    </div>

    <ul
        class="bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl space-y-4"
    >
        {
            tareas.length > 0 ? (
                tareas.map(
                    ({
                        id,
                        user_name,
                        process_type,
                        process,
                        state,
                        phase,
                    }) => (
                        <li class="flex justify-between items-center gap-x-6 px-1 py-2 hover:bg-gray-50 sm:px-6 ">
                            <div class="w-3/4 flex flex-col min-w-0 gap-y-5">
                                <div class="flex justify-between items-center flex-auto text-sm">
                                    <div class="titles">
                                        <p class="text-gray-800 text-lg">
                                        {process}
                                    </p>
                                    <p class="font-semibold text-gray-900">
                                        {user_name} 
                                    </p>
                                    </div>
                                    <p class="text-gray-600">
                                         {process_type}
                                    </p>
                                    
                                    <p class="text-gray-600"> {state}</p>
                                    <p class="text-gray-600">{phase}</p>
                                </div>
                            </div>

                            <div class="flex justify-center items-center ">
                                <button class=" bg-emerald-500 hover:bg-emerald-700 text-white font-bold py-1 px-2 rounded ">
                                    Gestionar
                                </button>
                            </div>

                            <div class="flex justify-end items-center"
                                x-data="{isListOptionsMenuOpen: false}"
                            >
                                <div class="relative flex-none">
                                    <button
                                        class="-m-5.5 block p-2.5 text-gray-500 hover:text-gray-900"
                                        type="button"
                                        @click="isListOptionsMenuOpen = !isListOptionsMenuOpen"
                                    >
                                        <Icon
                                            class="h-5 w-5"
                                            name="shared/ellipsis-vertical"
                                        />
                                    </button>
                                    <div
                                        class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
                                        tabindex="-1"
                                        x-show="isListOptionsMenuOpen"
                                        @click.outside="isListOptionsMenuOpen = false"
                                    >
                                        <a
                                            href="#"
                                            class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                            tabindex="-1"
                                            @click.prevent={`isUpdateWindowOpen = true; selectedProcess = '${id}';`}
                                        >
                                            Editar
                                        </a>
                                        <a
                                            href="#"
                                            class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
                                            tabindex="-1"
                                            @click.prevent={`isDeleteWindowOpen = true; selectedProcess = '${id}'; console.log('Proceso ID para eliminar:', '${id}')`}
                                        >
                                            Eliminar
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </li>
                    ),
                )
            ) : (
                <li class="text-gray-600 p-4">No hay procesos disponibles.</li>
            )
        }
    </ul>
</div> -->
