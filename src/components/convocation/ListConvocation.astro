---
import { Icon } from "astro-icon/components";

import { handleFind } from "@resources/index";

const { endpoint, permissions } = Astro.props;

import axios from "axios";
let getPublicConvocation = [];
await axios.get(`${import.meta.env.API_URL}processes`)
  .then(function (response) {
    getPublicConvocation = response.data;
  })
  .catch(function (error) {
    console.log(error);
  })
---

<ul class="divide-y divide-gray-100 bg-white shadow-sm ring-1 ring-gray-900/5 sm:rounded-xl">
  {getPublicConvocation.length > 0 ? getPublicConvocation.map(({id,name}) => (
    <li
      class="grid grid-cols-3 gap-x-6 px-2 py-3 hover:bg-gray-50 sm:px-6"
    >
      <div class="flex flex-col min-w-0 gap-y-2">
        <div class="min-w-0 flex-auto">
          <h4 class="text-lg font-semibold text-gray-900">{name}</h4>
          <p class="text-gray-600">Oferta: </p>
          <p class="text-gray-600">Fecha de inicio: </p>
          <p class="text-gray-600">Fecha de fin: </p>
        </div>
      </div>
      <div class="flex justify-center items-center space-x-10">
        <button
          type="button"
          class="inline-flex items-center justify-center rounded-md  bg-emerald-500 hover:bg-emerald-700 px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300"
        >
          Ver detalles
        </button>
        <button
          type="button"
          class="inline-flex items-center justify-center rounded-md  bg-yellow-300 hover:bg-yellow-500 px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300"
        >
          Nominar
        </button>
      </div>
      <div class="flex justify-end items-center" x-data="{isListOptionsMenuOpen: false}">
          <button
            class="-m-5.5 block p-2.5 text-gray-500 hover:text-gray-900"
            type="button"
            @click="isListOptionsMenuOpen = !isListOptionsMenuOpen"
          >
            <Icon class="h-10 w-10" name="shared/ellipsis-vertical" />
          </button>
          <div
            class="absolute right-0 z-10 mt-2 w-32 origin-top-right rounded-md bg-white py-2 shadow-lg ring-1 ring-gray-900/5 focus:outline-none"
            tabindex="-1"
            x-show="isListOptionsMenuOpen"
            @click.outside="isListOptionsMenuOpen = false"
          >
            <a
              href="#"
              class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
              tabindex="-1"
            >
              Editar
            </a>
            
            
            <a
              href="#"
              class="block px-3 py-1 text-sm leading-6 text-gray-900 hover:bg-gray-50"
              tabindex="-1"
              @click.prevent={` id = '${id}'; console.log('Form ID for delete:', '${id}');`}
            >
              Eliminar
            </a>
            
          </div>
      </div>
      
    </li>
  )) : (
    <li class="text-gray-600 p-4">No hay convocatorias disponibles.</li>
  )}
</ul>