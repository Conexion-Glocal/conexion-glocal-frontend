---
import Login from "@components/login/login.astro";
import LoginLayout from "@layouts/LoginLayout.astro";
import axios from "axios";
import { db, Session } from "astro:db";
import jwt from 'jsonwebtoken';
const endpointData = `${import.meta.env.PUBLIC_API_URL}auth/login`;
const endpointTenant = `${import.meta.env.PUBLIC_API_URL}tenant`;
let state;
if (Astro.request.method === "POST") {
    try {
        const login = await Astro.request.formData();
        const tenant = login.get("tenant");
        const email = login.get("email");
        const password = login.get("password");
        const data = await axios({
            method: "post",
            url: `${endpointData}`,
            data: {
                tenant: tenant,
                email: email,
                password: password,
            },
        });
        const decoded = jwt.verify(data.data.access_token, "secretkey");
        const getTenant = await axios
            .get(`${endpointTenant}/${tenant}`)
            .then((response) => response.data)
            .catch((error) => console.log(error));         
        await db.delete(Session);
        await db
            .insert(Session)
            .values({
                id: decoded.sub.id,
                access_token: data.data.access_token,
                refresh_token: data.data.refresh_token,
                menu: JSON.stringify(data.data.menu),
                image: getTenant.image,
                primary_color: getTenant.primary_color,
                secondary_color: getTenant.secondary_color,
            });
        Astro.cookies.set("id", `${decoded.sub.id}`);
        return Astro.redirect("/home");
    } catch (error) {
        console.log(error);
        state = true;
    }
}
---

<LoginLayout>
    <Login status={state}/>
</LoginLayout>
<script></script>
