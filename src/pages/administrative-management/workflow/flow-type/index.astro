---
import CreateForm from "@components/administrative_management/workflow/flow_type/CreateForm.astro";
import InfoDrawer from "@components/administrative_management/workflow/flow_type/InfoDrawer.astro";
import List from "@components/administrative_management/workflow/flow_type/List.astro";
import UpdateForm from "@components/administrative_management/workflow/flow_type/UpdateForm.astro";

import DeleteWindow from "@components/layout/baseLayout/DeleteWindow.astro";

import BaseLayout from "@layouts/BaseLayout.astro";
import CreateWindowLayout from "@layouts/shared/CreateWindowLayout.astro";
import DrawerLayout from "@layouts/shared/DrawerLayout.astro";
import UpdateWindowLayout from "@layouts/shared/UpdateWindowLayout.astro";

import { validatePermission } from "@utils/permissions";

const endpoint = `${import.meta.env.API_URL}/administrative-management/workflow/flow-type`;

const permissions = {
    create: validatePermission(""),
    delete: validatePermission(""),
    read: validatePermission(""),
    update: validatePermission(""),
};
---

<BaseLayout permissions={permissions} title="Tipos de flujo">
    <div
        x-data="{isDeleteWindowOpen: false, isInfoDrawerOpen: false, isUpdateWindowOpen: false}"
    >
        {
            permissions.read ? (
                <div x-data={`{description: '', id: '', name: '', status: ''}`}>
                    <List endpoint={endpoint} permissions={permissions} />
                    <DrawerLayout endpoint={endpoint}>
                        <InfoDrawer />
                    </DrawerLayout>
                    {permissions.create ? (
                        <CreateWindowLayout endpoint={endpoint}>
                            <CreateForm />
                        </CreateWindowLayout>
                    ) : (
                        ""
                    )}
                    {permissions.delete ? (
                        <DeleteWindow endpoint={endpoint} />
                    ) : (
                        ""
                    )}
                    {permissions.update ? (
                        <UpdateWindowLayout endpoint={endpoint}>
                            <UpdateForm />
                        </UpdateWindowLayout>
                    ) : (
                        ""
                    )}
                </div>
            ) : (
                ""
            )
        }
    </div>
</BaseLayout>
